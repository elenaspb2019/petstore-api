"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[748],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,g=d["".concat(p,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(g,o(o({ref:t},u),{},{components:n})):a.createElement(g,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},73938:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const i={sidebar_position:2},o="Paws & Tails API tutorial",s={unversionedId:"userguide",id:"userguide",title:"Paws & Tails API tutorial",description:"In this tutorial, you will learn how to add a new pet to a database, update and delete information about a pet, and get information about all pets.",source:"@site/docs/userguide.md",sourceDirName:".",slug:"/userguide",permalink:"/petstore-api/docs/userguide",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/userguide.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/petstore-api/docs/overview"}},p={},l=[{value:"Integration",id:"integration",level:2}],u={toc:l};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"paws--tails-api-tutorial"},"Paws & Tails API tutorial"),(0,r.kt)("p",null,"In this tutorial, you will learn how to add a new pet to a database, update and delete information about a pet, and get information about all pets."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"One of the most common actions is adding pets to a database. Let's add some information about a cat named ",(0,r.kt)("inlineCode",{parentName:"p"},"Fluffy"),". The system uses unique numeric identifiers to distinguish pets, while ",(0,r.kt)("inlineCode",{parentName:"p"},"available")," status means that a pet is ready for adoption. To add a new pet, send the following HTTP POST request:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X \'POST\' \\\n  \'https://petstore3.swagger.io/api/v3/pet\' \\\n  -H \'accept: application/json\' \\\n  -H \'api_key: special-key\' \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{\n  "id": 1,\n  "category": {\n    "id": 1,\n    "name": "string"\n  },\n  "name": "Fluffy",\n  "photoUrls": [\n    "string"\n  ],\n  "tags": [\n    {\n      "id": 1,\n      "name": "string"\n    }\n  ],\n  "status": "available"\n}\'\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Now send another request to get all the information about a pet. Find our cat by specifying the id ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," in the following request:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -X 'GET' \\\n  'https://petstore3.swagger.io/api/v3/pet/1' \\\n  -H 'accept: application/json' \\\n  -H 'api_key: special-key'\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"When the pet has found a new family, update information about the pet by sending a request with the ",(0,r.kt)("inlineCode",{parentName:"p"},"sold")," status:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -X 'POST' \\\n  'https://petstore3.swagger.io/api/v3/pet/1?status=sold' \\\n  -H 'accept: application/json' \\\n  -H 'api_key: special-key' \\\n  -d ''\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"When the pet has been delivered, delete information about the pet from the store's database:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -X 'DELETE' \\\n  'https://petstore3.swagger.io/api/v3/pet/1' \\\n  -H 'accept: application/json' \\\n  -H 'api_key: special-key'\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To find all available pets, send the following request with the ",(0,r.kt)("inlineCode",{parentName:"p"},"available")," status:"),(0,r.kt)("p",{parentName:"li"},"Curl:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -X 'GET' \\\n  'https://petstore3.swagger.io/api/v3/pet/findByStatus?status=available' \\\n  -H 'accept: application/json' \\\n  -H 'api_key: special-key'\n")))),(0,r.kt)("h2",{id:"integration"},"Integration"),(0,r.kt)("p",null,"An API request can be sent using various programming languages."),(0,r.kt)("p",null,"The example below shows how a request can be sent and processed in a simple Python application."),(0,r.kt)("p",null,"This application requests information about all available pets and prints the ids and names of the first ten to the console."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import requests\n\n\ndef print_pets():\n    URL = \"https://petstore3.swagger.io/api/v3/pet/findByStatus\"\n\n    status = \"available\"\n\n    PARAMS = {'status': status}\n\n    response = requests.get(url=URL, params=PARAMS)\n\n    pets = response.json()\n\n    counter = 1\n\n    for pet in pets:\n        if counter > 10:\n            break\n        print(\"{} {}\".format(pet['id'], pet['name']))\n        counter = counter + 1\n\n\nif __name__ == '__main__':\n    print_pets()\n")),(0,r.kt)("p",null,"   You will get the following output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"7 Lion 1\n8 Lion 2\n7709 Laika\n231 doggie\n321 goriynich\n1234554321 Kamysh\n402402 Bob\n522222543438 Kvok\n178787878 Kvok\n0 hhh999\n")))}c.isMDXComponent=!0}}]);